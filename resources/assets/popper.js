{
version: 3,
file: "popper.js",
sources: [
"../src/utils/isNative.js",
"../src/utils/debounce.js",
"../src/utils/isFunction.js",
"../src/utils/getStyleComputedProperty.js",
"../src/utils/getParentNode.js",
"../src/utils/getScrollParent.js",
"../src/utils/getOffsetParent.js",
"../src/utils/isOffsetContainer.js",
"../src/utils/getRoot.js",
"../src/utils/findCommonOffsetParent.js",
"../src/utils/getScroll.js",
"../src/utils/includeScroll.js",
"../src/utils/getBordersSize.js",
"../src/utils/isIE10.js",
"../src/utils/getWindowSizes.js",
"../src/utils/getClientRect.js",
"../src/utils/getBoundingClientRect.js",
"../src/utils/getOffsetRectRelativeToArbitraryNode.js",
"../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js",
"../src/utils/isFixed.js",
"../src/utils/getBoundaries.js",
"../src/utils/computeAutoPlacement.js",
"../src/utils/getReferenceOffsets.js",
"../src/utils/getOuterSizes.js",
"../src/utils/getOppositePlacement.js",
"../src/utils/getPopperOffsets.js",
"../src/utils/find.js",
"../src/utils/findIndex.js",
"../src/utils/runModifiers.js",
"../src/methods/update.js",
"../src/utils/isModifierEnabled.js",
"../src/utils/getSupportedPropertyName.js",
"../src/methods/destroy.js",
"../src/utils/setupEventListeners.js",
"../src/methods/enableEventListeners.js",
"../src/utils/removeEventListeners.js",
"../src/methods/disableEventListeners.js",
"../src/utils/isNumeric.js",
"../src/utils/setStyles.js",
"../src/utils/setAttributes.js",
"../src/modifiers/applyStyle.js",
"../src/modifiers/computeStyle.js",
"../src/utils/isModifierRequired.js",
"../src/modifiers/arrow.js",
"../src/utils/getOppositeVariation.js",
"../src/methods/placements.js",
"../src/utils/clockwise.js",
"../src/modifiers/flip.js",
"../src/modifiers/keepTogether.js",
"../src/modifiers/offset.js",
"../src/modifiers/preventOverflow.js",
"../src/modifiers/shift.js",
"../src/modifiers/hide.js",
"../src/modifiers/inner.js",
"../src/modifiers/index.js",
"../src/methods/defaults.js",
"../src/index.js"
],
sourcesContent: [
"const nativeHints = [ 'native code', '[object MutationObserverConstructor]', // for mobile safari iOS 9.0 ]; /** * Determine if a function is implemented natively (as opposed to a polyfill). * @method * @memberof Popper.Utils * @argument {Function | undefined} fn the function to check * @returns {Boolean} */ export default fn => nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1); ",
"import isNative from './isNative'; const isBrowser = typeof window !== 'undefined'; const longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox']; let timeoutDuration = 0; for (let i = 0; i < longerTimeoutBrowsers.length; i += 1) { if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) { timeoutDuration = 1; break; } } export function microtaskDebounce(fn) { let scheduled = false; let i = 0; const elem = document.createElement('span'); // MutationObserver provides a mechanism for scheduling microtasks, which // are scheduled *before* the next task. This gives us a way to debounce // a function but ensure it's called *before* the next paint. const observer = new MutationObserver(() => { fn(); scheduled = false; }); observer.observe(elem, { attributes: true }); return () => { if (!scheduled) { scheduled = true; elem.setAttribute('x-index', i); i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8 } }; } export function taskDebounce(fn) { let scheduled = false; return () => { if (!scheduled) { scheduled = true; setTimeout(() => { scheduled = false; fn(); }, timeoutDuration); } }; } // It's common for MutationObserver polyfills to be seen in the wild, however // these rely on Mutation Events which only occur when an element is connected // to the DOM. The algorithm used in this module does not use a connected element, // and so we must ensure that a *native* MutationObserver is available. const supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver); /** * Create a debounced version of a method, that's asynchronously deferred * but called in the minimum time possible. * * @method * @memberof Popper.Utils * @argument {Function} fn * @returns {Function} */ export default (supportsNativeMutationObserver ? microtaskDebounce : taskDebounce); ",
"/** * Check if the given variable is a function * @method * @memberof Popper.Utils * @argument {Any} functionToCheck - variable to check * @returns {Boolean} answer to: is a function? */ export default function isFunction(functionToCheck) { const getType = {}; return ( functionToCheck && getType.toString.call(functionToCheck) === '[object Function]' ); } ",
"/** * Get CSS computed property of the given element * @method * @memberof Popper.Utils * @argument {Eement} element * @argument {String} property */ export default function getStyleComputedProperty(element, property) { if (element.nodeType !== 1) { return []; } // NOTE: 1 DOM access here const css = window.getComputedStyle(element, null); return property ? css[property] : css; } ",
"/** * Returns the parentNode or the host of the element * @method * @memberof Popper.Utils * @argument {Element} element * @returns {Element} parent */ export default function getParentNode(element) { if (element.nodeName === 'HTML') { return element; } return element.parentNode || element.host; } ",
"import getStyleComputedProperty from './getStyleComputedProperty'; import getParentNode from './getParentNode'; /** * Returns the scrolling parent of the given element * @method * @memberof Popper.Utils * @argument {Element} element * @returns {Element} scroll parent */ export default function getScrollParent(element) { // Return body, `getScroll` will take care to get the correct `scrollTop` from it if ( !element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1 ) { return window.document.body; } // Firefox want us to check `-x` and `-y` variations as well const { overflow, overflowX, overflowY } = getStyleComputedProperty(element); if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) { return element; } return getScrollParent(getParentNode(element)); } ",
"import getStyleComputedProperty from './getStyleComputedProperty'; /** * Returns the offset parent of the given element * @method * @memberof Popper.Utils * @argument {Element} element * @returns {Element} offset parent */ export default function getOffsetParent(element) { // NOTE: 1 DOM access here const offsetParent = element && element.offsetParent; const nodeName = offsetParent && offsetParent.nodeName; if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') { return window.document.documentElement; } // .offsetParent will return the closest TD or TABLE in case // no offsetParent is present, I hate this job... if ( ['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static' ) { return getOffsetParent(offsetParent); } return offsetParent; } ",
"import getOffsetParent from './getOffsetParent'; export default function isOffsetContainer(element) { const { nodeName } = element; if (nodeName === 'BODY') { return false; } return ( nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element ); } ",
"/** * Finds the root node (document, shadowDOM root) of the given element * @method * @memberof Popper.Utils * @argument {Element} node * @returns {Element} root node */ export default function getRoot(node) { if (node.parentNode !== null) { return getRoot(node.parentNode); } return node; } ",
"import isOffsetContainer from './isOffsetContainer'; import getRoot from './getRoot'; import getOffsetParent from './getOffsetParent'; /** * Finds the offset parent common to the two provided nodes * @method * @memberof Popper.Utils * @argument {Element} element1 * @argument {Element} element2 * @returns {Element} common offset parent */ export default function findCommonOffsetParent(element1, element2) { // This check is needed to avoid errors in case one of the elements isn't defined for any reason if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) { return window.document.documentElement; } // Here we make sure to give as "start" the element that comes first in the DOM const order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING; const start = order ? element1 : element2; const end = order ? element2 : element1; // Get common ancestor container const range = document.createRange(); range.setStart(start, 0); range.setEnd(end, 0); const { commonAncestorContainer } = range; // Both nodes are inside #document if ( (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer) || start.contains(end) ) { if (isOffsetContainer(commonAncestorContainer)) { return commonAncestorContainer; } return getOffsetParent(commonAncestorContainer); } // one of the nodes is inside shadowDOM, find which one const element1root = getRoot(element1); if (element1root.host) { return findCommonOffsetParent(element1root.host, element2); } else { return findCommonOffsetParent(element1, getRoot(element2).host); } } ",
"/** * Gets the scroll value of the given element in the given side (top and left) * @method * @memberof Popper.Utils * @argument {Element} element * @argument {String} side `top` or `left` * @returns {number} amount of scrolled pixels */ export default function getScroll(element, side = 'top') { const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft'; const nodeName = element.nodeName; if (nodeName === 'BODY' || nodeName === 'HTML') { const html = window.document.documentElement; const scrollingElement = window.document.scrollingElement || html; return scrollingElement[upperSide]; } return element[upperSide]; } ",
"import getScroll from './getScroll'; /* * Sum or subtract the element scroll values (left and top) from a given rect object * @method * @memberof Popper.Utils * @param {Object} rect - Rect object you want to change * @param {HTMLElement} element - The element from the function reads the scroll values * @param {Boolean} subtract - set to true if you want to subtract the scroll values * @return {Object} rect - The modifier rect object */ export default function includeScroll(rect, element, subtract = false) { const scrollTop = getScroll(element, 'top'); const scrollLeft = getScroll(element, 'left'); const modifier = subtract ? -1 : 1; rect.top += scrollTop * modifier; rect.bottom += scrollTop * modifier; rect.left += scrollLeft * modifier; rect.right += scrollLeft * modifier; return rect; } ",
"/* * Helper to detect borders of a given element * @method * @memberof Popper.Utils * @param {CSSStyleDeclaration} styles * Result of `getStyleComputedProperty` on the given element * @param {String} axis - `x` or `y` * @return {number} borders - The borders size of the given axis */ export default function getBordersSize(styles, axis) { const sideA = axis === 'x' ? 'Left' : 'Top'; const sideB = sideA === 'Left' ? 'Right' : 'Bottom'; return ( +styles[`border${sideA}Width`].split('px')[0] + +styles[`border${sideB}Width`].split('px')[0] ); } ",
"/** * Tells if you are running Internet Explorer 10 * @method * @memberof Popper.Utils * @returns {Boolean} isIE10 */ let isIE10 = undefined; export default function() { if (isIE10 === undefined) { isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1; } return isIE10; } ",
"import isIE10 from './isIE10'; function getSize(axis, body, html, computedStyle) { return Math.max( body[`offset${axis}`], body[`scroll${axis}`], html[`client${axis}`], html[`offset${axis}`], html[`scroll${axis}`], isIE10() ? html[`offset${axis}`] + computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`] + computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`] : 0 ); } export default function getWindowSizes() { const body = window.document.body; const html = window.document.documentElement; const computedStyle = isIE10() && window.getComputedStyle(html); return { height: getSize('Height', body, html, computedStyle), width: getSize('Width', body, html, computedStyle), }; } ",
"/** * Given element offsets, generate an output similar to getBoundingClientRect * @method * @memberof Popper.Utils * @argument {Object} offsets * @returns {Object} ClientRect like output */ export default function getClientRect(offsets) { return { ...offsets, right: offsets.left + offsets.width, bottom: offsets.top + offsets.height, }; } ",
"import getStyleComputedProperty from './getStyleComputedProperty'; import getBordersSize from './getBordersSize'; import getWindowSizes from './getWindowSizes'; import getScroll from './getScroll'; import getClientRect from './getClientRect'; import isIE10 from './isIE10'; /** * Get bounding client rect of given element * @method * @memberof Popper.Utils * @param {HTMLElement} element * @return {Object} client rect */ export default function getBoundingClientRect(element) { let rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't // considered in DOM in some circumstances... // This isn't reproducible in IE10 compatibility mode of IE11 if (isIE10()) { try { rect = element.getBoundingClientRect(); const scrollTop = getScroll(element, 'top'); const scrollLeft = getScroll(element, 'left'); rect.top += scrollTop; rect.left += scrollLeft; rect.bottom += scrollTop; rect.right += scrollLeft; } catch (err) {} } else { rect = element.getBoundingClientRect(); } const result = { left: rect.left, top: rect.top, width: rect.right - rect.left, height: rect.bottom - rect.top, }; // subtract scrollbar size from sizes const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {}; const width = sizes.width || element.clientWidth || result.right - result.left; const height = sizes.height || element.clientHeight || result.bottom - result.top; let horizScrollbar = element.offsetWidth - width; let vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border` // we make this check conditional for performance reasons if (horizScrollbar || vertScrollbar) { const styles = getStyleComputedProperty(element); horizScrollbar -= getBordersSize(styles, 'x'); vertScrollbar -= getBordersSize(styles, 'y'); result.width -= horizScrollbar; result.height -= vertScrollbar; } return getClientRect(result); } ",
"import getStyleComputedProperty from './getStyleComputedProperty'; import includeScroll from './includeScroll'; import getScrollParent from './getScrollParent'; import getBoundingClientRect from './getBoundingClientRect'; import runIsIE10 from './isIE10'; import getClientRect from './getClientRect'; export default function getOffsetRectRelativeToArbitraryNode(children, parent) { const isIE10 = runIsIE10(); const isHTML = parent.nodeName === 'HTML'; const childrenRect = getBoundingClientRect(children); const parentRect = getBoundingClientRect(parent); const scrollParent = getScrollParent(children); const styles = getStyleComputedProperty(parent); const borderTopWidth = +styles.borderTopWidth.split('px')[0]; const borderLeftWidth = +styles.borderLeftWidth.split('px')[0]; let offsets = getClientRect({ top: childrenRect.top - parentRect.top - borderTopWidth, left: childrenRect.left - parentRect.left - borderLeftWidth, width: childrenRect.width, height: childrenRect.height, }); offsets.marginTop = 0; offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent // we do this only on HTML because it's the only element that behaves // differently when margins are applied to it. The margins are included in // the box of the documentElement, in the other cases not. if (!isIE10 && isHTML) { const marginTop = +styles.marginTop.split('px')[0]; const marginLeft = +styles.marginLeft.split('px')[0]; offsets.top -= borderTopWidth - marginTop; offsets.bottom -= borderTopWidth - marginTop; offsets.left -= borderLeftWidth - marginLeft; offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them offsets.marginTop = marginTop; offsets.marginLeft = marginLeft; } if ( isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY' ) { offsets = includeScroll(offsets, parent); } return offsets; } ",
"import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode'; import getScroll from './getScroll'; import getClientRect from './getClientRect'; export default function getViewportOffsetRectRelativeToArtbitraryNode(element) { const html = window.document.documentElement; const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html); const width = Math.max(html.clientWidth, window.innerWidth || 0); const height = Math.max(html.clientHeight, window.innerHeight || 0); const scrollTop = getScroll(html); const scrollLeft = getScroll(html, 'left'); const offset = { top: scrollTop - relativeOffset.top + relativeOffset.marginTop, left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft, width, height, }; return getClientRect(offset); } ",
"import getStyleComputedProperty from './getStyleComputedProperty'; import getParentNode from './getParentNode'; /** * Check if the given element is fixed or is inside a fixed parent * @method * @memberof Popper.Utils * @argument {Element} element * @argument {Element} customContainer * @returns {Boolean} answer to "isFixed?" */ export default function isFixed(element) { const nodeName = element.nodeName; if (nodeName === 'BODY' || nodeName === 'HTML') { return false; } if (getStyleComputedProperty(element, 'position') === 'fixed') { return true; } return isFixed(getParentNode(element)); } ",
"import getScrollParent from './getScrollParent'; import getParentNode from './getParentNode'; import findCommonOffsetParent from './findCommonOffsetParent'; import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode'; import getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode'; import getWindowSizes from './getWindowSizes'; import isFixed from './isFixed'; /** * Computed the boundaries limits and return them * @method * @memberof Popper.Utils * @param {HTMLElement} popper * @param {HTMLElement} reference * @param {number} padding * @param {HTMLElement} boundariesElement - Element used to define the boundaries * @returns {Object} Coordinates of the boundaries */ export default function getBoundaries( popper, reference, padding, boundariesElement ) { // NOTE: 1 DOM access here let boundaries = { top: 0, left: 0 }; const offsetParent = findCommonOffsetParent(popper, reference); // Handle viewport case if (boundariesElement === 'viewport') { boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent); } else { // Handle other cases based on DOM element used as boundaries let boundariesNode; if (boundariesElement === 'scrollParent') { boundariesNode = getScrollParent(getParentNode(popper)); if (boundariesNode.nodeName === 'BODY') { boundariesNode = window.document.documentElement; } } else if (boundariesElement === 'window') { boundariesNode = window.document.documentElement; } else { boundariesNode = boundariesElement; } const offsets = getOffsetRectRelativeToArbitraryNode( boundariesNode, offsetParent ); // In case of HTML, we need a different computation if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) { const { height, width } = getWindowSizes(); boundaries.top += offsets.top - offsets.marginTop; boundaries.bottom = height + offsets.top; boundaries.left += offsets.left - offsets.marginLeft; boundaries.right = width + offsets.left; } else { // for all the other DOM elements, this one is good boundaries = offsets; } } // Add paddings boundaries.left += padding; boundaries.top += padding; boundaries.right -= padding; boundaries.bottom -= padding; return boundaries; } ",
"import getBoundaries from '../utils/getBoundaries'; function getArea({ width, height }) { return width * height; } /** * Utility used to transform the `auto` placement to the placement with more * available space. * @method * @memberof Popper.Utils * @argument {Object} data - The data object generated by update method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function computeAutoPlacement( placement, refRect, popper, reference, boundariesElement, padding = 0 ) { if (placement.indexOf('auto') === -1) { return placement; } const boundaries = getBoundaries( popper, reference, padding, boundariesElement ); const rects = { top: { width: boundaries.width, height: refRect.top - boundaries.top, }, right: { width: boundaries.right - refRect.right, height: boundaries.height, }, bottom: { width: boundaries.width, height: boundaries.bottom - refRect.bottom, }, left: { width: refRect.left - boundaries.left, height: boundaries.height, }, }; const sortedAreas = Object.keys(rects) .map(key => ({ key, ...rects[key], area: getArea(rects[key]), })) .sort((a, b) => b.area - a.area); const filteredAreas = sortedAreas.filter( ({ width, height }) => width >= popper.clientWidth && height >= popper.clientHeight ); const computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key; const variation = placement.split('-')[1]; return computedPlacement + (variation ? `-${variation}` : ''); } ",
"import findCommonOffsetParent from './findCommonOffsetParent'; import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode'; /** * Get offsets to the reference element * @method * @memberof Popper.Utils * @param {Object} state * @param {Element} popper - the popper element * @param {Element} reference - the reference element (the popper will be relative to this) * @returns {Object} An object containing the offsets which will be applied to the popper */ export default function getReferenceOffsets(state, popper, reference) { const commonOffsetParent = findCommonOffsetParent(popper, reference); return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent); } ",
"/** * Get the outer sizes of the given element (offset size + margins) * @method * @memberof Popper.Utils * @argument {Element} element * @returns {Object} object containing width and height properties */ export default function getOuterSizes(element) { const styles = window.getComputedStyle(element); const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom); const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight); const result = { width: element.offsetWidth + y, height: element.offsetHeight + x, }; return result; } ",
"/** * Get the opposite placement of the given one * @method * @memberof Popper.Utils * @argument {String} placement * @returns {String} flipped placement */ export default function getOppositePlacement(placement) { const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' }; return placement.replace(/left|right|bottom|top/g, matched => hash[matched]); } ",
"import getOuterSizes from './getOuterSizes'; import getOppositePlacement from './getOppositePlacement'; /** * Get offsets to the popper * @method * @memberof Popper.Utils * @param {Object} position - CSS position the Popper will get applied * @param {HTMLElement} popper - the popper element * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this) * @param {String} placement - one of the valid placement options * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper */ export default function getPopperOffsets(popper, referenceOffsets, placement) { placement = placement.split('-')[0]; // Get popper node sizes const popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object const popperOffsets = { width: popperRect.width, height: popperRect.height, }; // depending by the popper placement we have to compute its offsets slightly differently const isHoriz = ['right', 'left'].indexOf(placement) !== -1; const mainSide = isHoriz ? 'top' : 'left'; const secondarySide = isHoriz ? 'left' : 'top'; const measurement = isHoriz ? 'height' : 'width'; const secondaryMeasurement = !isHoriz ? 'height' : 'width'; popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2; if (placement === secondarySide) { popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement]; } else { popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)]; } return popperOffsets; } ",
"/** * Mimics the `find` method of Array * @method * @memberof Popper.Utils * @argument {Array} arr * @argument prop * @argument value * @returns index or -1 */ export default function find(arr, check) { // use native find if supported if (Array.prototype.find) { return arr.find(check); } // use `filter` to obtain the same behavior of `find` return arr.filter(check)[0]; } ",
"import find from './find'; /** * Return the index of the matching object * @method * @memberof Popper.Utils * @argument {Array} arr * @argument prop * @argument value * @returns index or -1 */ export default function findIndex(arr, prop, value) { // use native findIndex if supported if (Array.prototype.findIndex) { return arr.findIndex(cur => cur[prop] === value); } // use `find` + `indexOf` if `findIndex` isn't supported const match = find(arr, obj => obj[prop] === value); return arr.indexOf(match); } ",
"import isFunction from './isFunction'; import findIndex from './findIndex'; import getClientRect from '../utils/getClientRect'; /** * Loop trough the list of modifiers and run them in order, * each of them will then edit the data object. * @method * @memberof Popper.Utils * @param {dataObject} data * @param {Array} modifiers * @param {String} ends - Optional modifier name used as stopper * @returns {dataObject} */ export default function runModifiers(modifiers, data, ends) { const modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends)); modifiersToRun.forEach(modifier => { if (modifier.function) { console.warn('`modifier.function` is deprecated, use `modifier.fn`!'); } const fn = modifier.function || modifier.fn; if (modifier.enabled && isFunction(fn)) { // Add properties to offsets to make them a complete clientRect object // we do this before each modifier to make sure the previous one doesn't // mess with these values data.offsets.popper = getClientRect(data.offsets.popper); data.offsets.reference = getClientRect(data.offsets.reference); data = fn(data, modifier); } }); return data; } ",
"import computeAutoPlacement from '../utils/computeAutoPlacement'; import getReferenceOffsets from '../utils/getReferenceOffsets'; import getPopperOffsets from '../utils/getPopperOffsets'; import runModifiers from '../utils/runModifiers'; /** * Updates the position of the popper, computing the new offsets and applying * the new style.<br /> * Prefer `scheduleUpdate` over `update` because of performance reasons. * @method * @memberof Popper */ export default function update() { // if popper is destroyed, don't perform any further update if (this.state.isDestroyed) { return; } let data = { instance: this, styles: {}, arrowStyles: {}, attributes: {}, flipped: false, offsets: {}, }; // compute reference element offsets data.offsets.reference = getReferenceOffsets( this.state, this.popper, this.reference ); // compute auto placement, store placement inside the data object, // modifiers will be able to edit `placement` if needed // and refer to originalPlacement to know the original value data.placement = computeAutoPlacement( this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding ); // store the computed placement inside `originalPlacement` data.originalPlacement = data.placement; // compute the popper offsets data.offsets.popper = getPopperOffsets( this.popper, data.offsets.reference, data.placement ); data.offsets.popper.position = 'absolute'; // run the modifiers data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback // the other ones will call `onUpdate` callback if (!this.state.isCreated) { this.state.isCreated = true; this.options.onCreate(data); } else { this.options.onUpdate(data); } } ",
"/** * Helper used to know if the given modifier is enabled. * @method * @memberof Popper.Utils * @returns {Boolean} */ export default function isModifierEnabled(modifiers, modifierName) { return modifiers.some( ({ name, enabled }) => enabled && name === modifierName ); } ",
"/** * Get the prefixed supported property name * @method * @memberof Popper.Utils * @argument {String} property (camelCase) * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix) */ export default function getSupportedPropertyName(property) { const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O']; const upperProp = property.charAt(0).toUpperCase() + property.slice(1); for (let i = 0; i < prefixes.length - 1; i++) { const prefix = prefixes[i]; const toCheck = prefix ? `${prefix}${upperProp}` : property; if (typeof window.document.body.style[toCheck] !== 'undefined') { return toCheck; } } return null; } ",
"import isModifierEnabled from '../utils/isModifierEnabled'; import getSupportedPropertyName from '../utils/getSupportedPropertyName'; /** * Destroy the popper * @method * @memberof Popper */ export default function destroy() { this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled if (isModifierEnabled(this.modifiers, 'applyStyle')) { this.popper.removeAttribute('x-placement'); this.popper.style.left = ''; this.popper.style.position = ''; this.popper.style.top = ''; this.popper.style[getSupportedPropertyName('transform')] = ''; } this.disableEventListeners(); // remove the popper if user explicity asked for the deletion on destroy // do not use `remove` because IE11 doesn't support it if (this.options.removeOnDestroy) { this.popper.parentNode.removeChild(this.popper); } return this; } ",
"import getScrollParent from './getScrollParent'; function attachToScrollParents(scrollParent, event, callback, scrollParents) { const isBody = scrollParent.nodeName === 'BODY'; const target = isBody ? window : scrollParent; target.addEventListener(event, callback, { passive: true }); if (!isBody) { attachToScrollParents( getScrollParent(target.parentNode), event, callback, scrollParents ); } scrollParents.push(target); } /** * Setup needed event listeners used to update the popper position * @method * @memberof Popper.Utils * @private */ export default function setupEventListeners( reference, options, state, updateBound ) { // Resize event listener on window state.updateBound = updateBound; window.addEventListener('resize', state.updateBound, { passive: true }); // Scroll event listener on scroll parents const scrollElement = getScrollParent(reference); attachToScrollParents( scrollElement, 'scroll', state.updateBound, state.scrollParents ); state.scrollElement = scrollElement; state.eventsEnabled = true; return state; } ",
"import setupEventListeners from '../utils/setupEventListeners'; /** * It will add resize/scroll events and start recalculating * position of the popper element when they are triggered. * @method * @memberof Popper */ export default function enableEventListeners() { if (!this.state.eventsEnabled) { this.state = setupEventListeners( this.reference, this.options, this.state, this.scheduleUpdate ); } } ",
"/** * Remove event listeners used to update the popper position * @method * @memberof Popper.Utils * @private */ export default function removeEventListeners(reference, state) { // Remove resize event listener on window window.removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents state.scrollParents.forEach(target => { target.removeEventListener('scroll', state.updateBound); }); // Reset state state.updateBound = null; state.scrollParents = []; state.scrollElement = null; state.eventsEnabled = false; return state; } ",
"import removeEventListeners from '../utils/removeEventListeners'; /** * It will remove resize/scroll events and won't recalculate popper position * when they are triggered. It also won't trigger onUpdate callback anymore, * unless you call `update` method manually. * @method * @memberof Popper */ export default function disableEventListeners() { if (this.state.eventsEnabled) { window.cancelAnimationFrame(this.scheduleUpdate); this.state = removeEventListeners(this.reference, this.state); } } ",
"/** * Tells if a given input is a number * @method * @memberof Popper.Utils * @param {*} input to check * @return {Boolean} */ export default function isNumeric(n) { return n !== '' && !isNaN(parseFloat(n)) && isFinite(n); } ",
"import isNumeric from './isNumeric'; /** * Set the style to the given popper * @method * @memberof Popper.Utils * @argument {Element} element - Element to apply the style to * @argument {Object} styles * Object with a list of properties and values which will be applied to the element */ export default function setStyles(element, styles) { Object.keys(styles).forEach(prop => { let unit = ''; // add unit if the value is numeric and is one of the following if ( ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop]) ) { unit = 'px'; } element.style[prop] = styles[prop] + unit; }); } ",
"/** * Set the attributes to the given popper * @method * @memberof Popper.Utils * @argument {Element} element - Element to apply the attributes to * @argument {Object} styles * Object with a list of properties and values which will be applied to the element */ export default function setAttributes(element, attributes) { Object.keys(attributes).forEach(function(prop) { const value = attributes[prop]; if (value !== false) { element.setAttribute(prop, attributes[prop]); } else { element.removeAttribute(prop); } }); } ",
"import setStyles from '../utils/setStyles'; import setAttributes from '../utils/setAttributes'; import getReferenceOffsets from '../utils/getReferenceOffsets'; import computeAutoPlacement from '../utils/computeAutoPlacement'; /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by `update` method * @argument {Object} data.styles - List of style properties - values to apply to popper element * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element * @argument {Object} options - Modifiers configuration and options * @returns {Object} The same data object */ export default function applyStyle(data) { // any property present in `data.styles` will be applied to the popper, // in this way we can make the 3rd party modifiers add custom styles to it // Be aware, modifiers could override the properties defined in the previous // lines of this modifier! setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper, // they will be set as HTML attributes of the element setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties if (data.arrowElement && Object.keys(data.arrowStyles).length) { setStyles(data.arrowElement, data.arrowStyles); } return data; } /** * Set the x-placement attribute before everything else because it could be used * to add margins to the popper margins needs to be calculated to get the * correct popper offsets. * @method * @memberof Popper.modifiers * @param {HTMLElement} reference - The reference element used to position the popper * @param {HTMLElement} popper - The HTML element used as popper. * @param {Object} options - Popper.js options */ export function applyStyleOnLoad( reference, popper, options, modifierOptions, state ) { // compute reference element offsets const referenceOffsets = getReferenceOffsets(state, popper, reference); // compute auto placement, store placement inside the data object, // modifiers will be able to edit `placement` if needed // and refer to originalPlacement to know the original value const placement = computeAutoPlacement( options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding ); popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because // without the position applied we can't guarantee correct computations setStyles(popper, { position: 'absolute' }); return options; } ",
"import getSupportedPropertyName from '../utils/getSupportedPropertyName'; import find from '../utils/find'; import getOffsetParent from '../utils/getOffsetParent'; import getBoundingClientRect from '../utils/getBoundingClientRect'; /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by `update` method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function computeStyle(data, options) { const { x, y } = options; const { popper } = data.offsets; // Remove this legacy support in Popper.js v2 const legacyGpuAccelerationOption = find( data.instance.modifiers, modifier => modifier.name === 'applyStyle' ).gpuAcceleration; if (legacyGpuAccelerationOption !== undefined) { console.warn( 'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!' ); } const gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration; const offsetParent = getOffsetParent(data.instance.popper); const offsetParentRect = getBoundingClientRect(offsetParent); // Styles const styles = { position: popper.position, }; // floor sides to avoid blurry text const offsets = { left: Math.floor(popper.left), top: Math.floor(popper.top), bottom: Math.floor(popper.bottom), right: Math.floor(popper.right), }; const sideA = x === 'bottom' ? 'top' : 'bottom'; const sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported, // we use `translate3d` to apply the position to the popper we // automatically use the supported prefixed version if needed const prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?) // If the content of the popper grows once it's been positioned, it // may happen that the popper gets misplaced because of the new content // overflowing its reference element // To avoid this problem, we provide two options (x and y), which allow // the consumer to define the offset origin. // If we position a popper on top of a reference element, we can set // `x` to `top` to make the popper grow towards its top instead of // its bottom. let left, top; if (sideA === 'bottom') { top = -offsetParentRect.height + offsets.bottom; } else { top = offsets.top; } if (sideB === 'right') { left = -offsetParentRect.width + offsets.right; } else { left = offsets.left; } if (gpuAcceleration && prefixedProperty) { styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`; styles[sideA] = 0; styles[sideB] = 0; styles.willChange = 'transform'; } else { // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties const invertTop = sideA === 'bottom' ? -1 : 1; const invertLeft = sideB === 'right' ? -1 : 1; styles[sideA] = top * invertTop; styles[sideB] = left * invertLeft; styles.willChange = `${sideA}, ${sideB}`; } // Attributes const attributes = { 'x-placement': data.placement, }; // Update `data` attributes, styles and arrowStyles data.attributes = { ...attributes, ...data.attributes }; data.styles = { ...styles, ...data.styles }; data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles }; return data; } ",
"import find from './find'; /** * Helper used to know if the given modifier depends from another one.<br /> * It checks if the needed modifier is listed and enabled. * @method * @memberof Popper.Utils * @param {Array} modifiers - list of modifiers * @param {String} requestingName - name of requesting modifier * @param {String} requestedName - name of requested modifier * @returns {Boolean} */ export default function isModifierRequired( modifiers, requestingName, requestedName ) { const requesting = find(modifiers, ({ name }) => name === requestingName); const isRequired = !!requesting && modifiers.some(modifier => { return ( modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order ); }); if (!isRequired) { const requesting = `\`${requestingName}\``; const requested = `\`${requestedName}\``; console.warn( `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!` ); } return isRequired; } ",
"import getClientRect from '../utils/getClientRect'; import getOuterSizes from '../utils/getOuterSizes'; import isModifierRequired from '../utils/isModifierRequired'; import getStyleComputedProperty from '../utils/getStyleComputedProperty'; /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by update method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function arrow(data, options) { // arrow depends on keepTogether in order to work if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) { return data; } let arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector if (typeof arrowElement === 'string') { arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier if (!arrowElement) { return data; } } else { // if the arrowElement isn't a query selector we must check that the // provided DOM node is child of its popper node if (!data.instance.popper.contains(arrowElement)) { console.warn( 'WARNING: `arrow.element` must be child of its popper element!' ); return data; } } const placement = data.placement.split('-')[0]; const { popper, reference } = data.offsets; const isVertical = ['left', 'right'].indexOf(placement) !== -1; const len = isVertical ? 'height' : 'width'; const sideCapitalized = isVertical ? 'Top' : 'Left'; const side = sideCapitalized.toLowerCase(); const altSide = isVertical ? 'left' : 'top'; const opSide = isVertical ? 'bottom' : 'right'; const arrowElementSize = getOuterSizes(arrowElement)[len]; // // extends keepTogether behavior making sure the popper and its // reference have enough pixels in conjuction // // top/left side if (reference[opSide] - arrowElementSize < popper[side]) { data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize); } // bottom/right side if (reference[side] + arrowElementSize > popper[opSide]) { data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide]; } // compute center of the popper const center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets // take popper margin in account because we don't have this info available const popperMarginSide = getStyleComputedProperty( data.instance.popper, `margin${sideCapitalized}` ).replace('px', ''); let sideValue = center - getClientRect(data.offsets.popper)[side] - popperMarginSide; // prevent arrowElement from being placed not contiguously to its popper sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0); data.arrowElement = arrowElement; data.offsets.arrow = {}; data.offsets.arrow[side] = Math.round(sideValue); data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node return data; } ",
"/** * Get the opposite placement variation of the given one * @method * @memberof Popper.Utils * @argument {String} placement variation * @returns {String} flipped placement variation */ export default function getOppositeVariation(variation) { if (variation === 'end') { return 'start'; } else if (variation === 'start') { return 'end'; } return variation; } ",
"/** * List of accepted placements to use as values of the `placement` option.<br /> * Valid placements are: * - `auto` * - `top` * - `right` * - `bottom` * - `left` * * Each placement can have a variation from this list: * - `-start` * - `-end` * * Variations are interpreted easily if you think of them as the left to right * written languages. Horizontally (`top` and `bottom`), `start` is left and `end` * is right.<br /> * Vertically (`left` and `right`), `start` is top and `end` is bottom. * * Some valid examples are: * - `top-end` (on top of reference, right aligned) * - `right-start` (on right of reference, top aligned) * - `bottom` (on bottom, centered) * - `auto-right` (on the side with more space available, alignment depends by placement) * * @static * @type {Array} * @enum {String} * @readonly * @method placements * @memberof Popper */ export default [ 'auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start', ]; ",
"import placements from '../methods/placements'; // Get rid of `auto` `auto-start` and `auto-end` const validPlacements = placements.slice(3); /** * Given an initial placement, returns all the subsequent placements * clockwise (or counter-clockwise). * * @method * @memberof Popper.Utils * @argument {String} placement - A valid placement (it accepts variations) * @argument {Boolean} counter - Set to true to walk the placements counterclockwise * @returns {Array} placements including their variations */ export default function clockwise(placement, counter = false) { const index = validPlacements.indexOf(placement); const arr = validPlacements .slice(index + 1) .concat(validPlacements.slice(0, index)); return counter ? arr.reverse() : arr; } ",
"import getOppositePlacement from '../utils/getOppositePlacement'; import getOppositeVariation from '../utils/getOppositeVariation'; import getPopperOffsets from '../utils/getPopperOffsets'; import runModifiers from '../utils/runModifiers'; import getBoundaries from '../utils/getBoundaries'; import isModifierEnabled from '../utils/isModifierEnabled'; import clockwise from '../utils/clockwise'; const BEHAVIORS = { FLIP: 'flip', CLOCKWISE: 'clockwise', COUNTERCLOCKWISE: 'counterclockwise', }; /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by update method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function flip(data, options) { // if `inner` modifier is enabled, we can't use the `flip` modifier if (isModifierEnabled(data.instance.modifiers, 'inner')) { return data; } if (data.flipped && data.placement === data.originalPlacement) { // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides return data; } const boundaries = getBoundaries( data.instance.popper, data.instance.reference, options.padding, options.boundariesElement ); let placement = data.placement.split('-')[0]; let placementOpposite = getOppositePlacement(placement); let variation = data.placement.split('-')[1] || ''; let flipOrder = []; switch (options.behavior) { case BEHAVIORS.FLIP: flipOrder = [placement, placementOpposite]; break; case BEHAVIORS.CLOCKWISE: flipOrder = clockwise(placement); break; case BEHAVIORS.COUNTERCLOCKWISE: flipOrder = clockwise(placement, true); break; default: flipOrder = options.behavior; } flipOrder.forEach((step, index) => { if (placement !== step || flipOrder.length === index + 1) { return data; } placement = data.placement.split('-')[0]; placementOpposite = getOppositePlacement(placement); const popperOffsets = data.offsets.popper; const refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here const floor = Math.floor; const overlapsRef = (placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left)) || (placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right)) || (placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top)) || (placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom)); const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left); const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right); const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top); const overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom); const overflowsBoundaries = (placement === 'left' && overflowsLeft) || (placement === 'right' && overflowsRight) || (placement === 'top' && overflowsTop) || (placement === 'bottom' && overflowsBottom); // flip the variation if required const isVertical = ['top', 'bottom'].indexOf(placement) !== -1; const flippedVariation = !!options.flipVariations && ((isVertical && variation === 'start' && overflowsLeft) || (isVertical && variation === 'end' && overflowsRight) || (!isVertical && variation === 'start' && overflowsTop) || (!isVertical && variation === 'end' && overflowsBottom)); if (overlapsRef || overflowsBoundaries || flippedVariation) { // this boolean to detect any flip loop data.flipped = true; if (overlapsRef || overflowsBoundaries) { placement = flipOrder[index + 1]; } if (flippedVariation) { variation = getOppositeVariation(variation); } data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with // any additional property we may add in the future data.offsets.popper = { ...data.offsets.popper, ...getPopperOffsets( data.instance.popper, data.offsets.reference, data.placement ), }; data = runModifiers(data.instance.modifiers, data, 'flip'); } }); return data; } ",
"/** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by update method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function keepTogether(data) { const { popper, reference } = data.offsets; const placement = data.placement.split('-')[0]; const floor = Math.floor; const isVertical = ['top', 'bottom'].indexOf(placement) !== -1; const side = isVertical ? 'right' : 'bottom'; const opSide = isVertical ? 'left' : 'top'; const measurement = isVertical ? 'width' : 'height'; if (popper[side] < floor(reference[opSide])) { data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement]; } if (popper[opSide] > floor(reference[side])) { data.offsets.popper[opSide] = floor(reference[side]); } return data; } ",
"import isNumeric from '../utils/isNumeric'; import getClientRect from '../utils/getClientRect'; import find from '../utils/find'; /** * Converts a string containing value + unit into a px value number * @function * @memberof {modifiers~offset} * @private * @argument {String} str - Value + unit string * @argument {String} measurement - `height` or `width` * @argument {Object} popperOffsets * @argument {Object} referenceOffsets * @returns {Number|String} * Value in pixels, or original string if no values were extracted */ export function toValue(str, measurement, popperOffsets, referenceOffsets) { // separate value from unit const split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/); const value = +split[1]; const unit = split[2]; // If it's not a number it's an operator, I guess if (!value) { return str; } if (unit.indexOf('%') === 0) { let element; switch (unit) { case '%p': element = popperOffsets; break; case '%': case '%r': default: element = referenceOffsets; } const rect = getClientRect(element); return rect[measurement] / 100 * value; } else if (unit === 'vh' || unit === 'vw') { // if is a vh or vw, we calculate the size based on the viewport let size; if (unit === 'vh') { size = Math.max( document.documentElement.clientHeight, window.innerHeight || 0 ); } else { size = Math.max( document.documentElement.clientWidth, window.innerWidth || 0 ); } return size / 100 * value; } else { // if is an explicit pixel unit, we get rid of the unit and keep the value // if is an implicit unit, it's px, and we return just the value return value; } } /** * Parse an `offset` string to extrapolate `x` and `y` numeric offsets. * @function * @memberof {modifiers~offset} * @private * @argument {String} offset * @argument {Object} popperOffsets * @argument {Object} referenceOffsets * @argument {String} basePlacement * @returns {Array} a two cells array with x and y offsets in numbers */ export function parseOffset( offset, popperOffsets, referenceOffsets, basePlacement ) { const offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width // in this way the first offset will use an axis and the second one // will use the other one const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands // The regex addresses values with the plus or minus sign in front (+10, -20, etc) const fragments = offset.split(/(\+|\-)/).map(frag => frag.trim()); // Detect if the offset string contains a pair of values or a single one // they could be separated by comma or space const divider = fragments.indexOf( find(fragments, frag => frag.search(/,|\s/) !== -1) ); if (fragments[divider] && fragments[divider].indexOf(',') === -1) { console.warn( 'Offsets separated by white space(s) are deprecated, use a comma (,) instead.' ); } // If divider is found, we divide the list of values and operands to divide // them by ofset X and Y. const splitRegex = /\s*,\s*|\s+/; let ops = divider !== -1 ? [ fragments .slice(0, divider) .concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat( fragments.slice(divider + 1) ), ] : [fragments]; // Convert the values with units to absolute pixels to allow our computations ops = ops.map((op, index) => { // Most of the units rely on the orientation of the popper const measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width'; let mergeWithPrevious = false; return ( op // This aggregates any `+` or `-` sign that aren't considered operators // e.g.: 10 + +5 => [10, +, +5] .reduce((a, b) => { if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) { a[a.length - 1] = b; mergeWithPrevious = true; return a; } else if (mergeWithPrevious) { a[a.length - 1] += b; mergeWithPrevious = false; return a; } else { return a.concat(b); } }, []) // Here we convert the string values into number values (in px) .map(str => toValue(str, measurement, popperOffsets, referenceOffsets)) ); }); // Loop trough the offsets arrays and execute the operations ops.forEach((op, index) => { op.forEach((frag, index2) => { if (isNumeric(frag)) { offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1); } }); }); return offsets; } /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by update method * @argument {Object} options - Modifiers configuration and options * @argument {Number|String} options.offset=0 * The offset value as described in the modifier description * @returns {Object} The data object, properly modified */ export default function offset(data, { offset }) { const { placement, offsets: { popper, reference } } = data; const basePlacement = placement.split('-')[0]; let offsets; if (isNumeric(+offset)) { offsets = [+offset, 0]; } else { offsets = parseOffset(offset, popper, reference, basePlacement); } if (basePlacement === 'left') { popper.top += offsets[0]; popper.left -= offsets[1]; } else if (basePlacement === 'right') { popper.top += offsets[0]; popper.left += offsets[1]; } else if (basePlacement === 'top') { popper.left += offsets[0]; popper.top -= offsets[1]; } else if (basePlacement === 'bottom') { popper.left += offsets[0]; popper.top += offsets[1]; } data.popper = popper; return data; } ",
"import getOffsetParent from '../utils/getOffsetParent'; import getBoundaries from '../utils/getBoundaries'; /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by `update` method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function preventOverflow(data, options) { let boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to // go one step up and use the next offsetParent as reference to // avoid to make this modifier completely useless and look like broken if (data.instance.reference === boundariesElement) { boundariesElement = getOffsetParent(boundariesElement); } const boundaries = getBoundaries( data.instance.popper, data.instance.reference, options.padding, boundariesElement ); options.boundaries = boundaries; const order = options.priority; let popper = data.offsets.popper; const check = { primary(placement) { let value = popper[placement]; if ( popper[placement] < boundaries[placement] && !options.escapeWithReference ) { value = Math.max(popper[placement], boundaries[placement]); } return { [placement]: value }; }, secondary(placement) { const mainSide = placement === 'right' ? 'left' : 'top'; let value = popper[mainSide]; if ( popper[placement] > boundaries[placement] && !options.escapeWithReference ) { value = Math.min( popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height) ); } return { [mainSide]: value }; }, }; order.forEach(placement => { const side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary'; popper = { ...popper, ...check[side](placement) }; }); data.offsets.popper = popper; return data; } ",
"/** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by `update` method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function shift(data) { const placement = data.placement; const basePlacement = placement.split('-')[0]; const shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier if (shiftvariation) { const { reference, popper } = data.offsets; const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1; const side = isVertical ? 'left' : 'top'; const measurement = isVertical ? 'width' : 'height'; const shiftOffsets = { start: { [side]: reference[side] }, end: { [side]: reference[side] + reference[measurement] - popper[measurement], }, }; data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] }; } return data; } ",
"import isModifierRequired from '../utils/isModifierRequired'; import find from '../utils/find'; /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by update method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function hide(data) { if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) { return data; } const refRect = data.offsets.reference; const bound = find( data.instance.modifiers, modifier => modifier.name === 'preventOverflow' ).boundaries; if ( refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left ) { // Avoid unnecessary DOM access if visibility hasn't changed if (data.hide === true) { return data; } data.hide = true; data.attributes['x-out-of-boundaries'] = ''; } else { // Avoid unnecessary DOM access if visibility hasn't changed if (data.hide === false) { return data; } data.hide = false; data.attributes['x-out-of-boundaries'] = false; } return data; } ",
"import getClientRect from '../utils/getClientRect'; import getOppositePlacement from '../utils/getOppositePlacement'; /** * @function * @memberof Modifiers * @argument {Object} data - The data object generated by `update` method * @argument {Object} options - Modifiers configuration and options * @returns {Object} The data object, properly modified */ export default function inner(data) { const placement = data.placement; const basePlacement = placement.split('-')[0]; const { popper, reference } = data.offsets; const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1; const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1; popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0); data.placement = getOppositePlacement(placement); data.offsets.popper = getClientRect(popper); return data; } ",
"import applyStyle, { applyStyleOnLoad } from './applyStyle'; import computeStyle from './computeStyle'; import arrow from './arrow'; import flip from './flip'; import keepTogether from './keepTogether'; import offset from './offset'; import preventOverflow from './preventOverflow'; import shift from './shift'; import hide from './hide'; import inner from './inner'; /** * Modifier function, each modifier can have a function of this type assigned * to its `fn` property.<br /> * These functions will be called on each update, this means that you must * make sure they are performant enough to avoid performance bottlenecks. * * @function ModifierFn * @argument {dataObject} data - The data object generated by `update` method * @argument {Object} options - Modifiers configuration and options * @returns {dataObject} The data object, properly modified */ /** * Modifiers are plugins used to alter the behavior of your poppers.<br /> * Popper.js uses a set of 9 modifiers to provide all the basic functionalities * needed by the library. * * Usually you don't want to override the `order`, `fn` and `onLoad` props. * All the other properties are configurations that could be tweaked. * @namespace modifiers */ export default { /** * Modifier used to shift the popper on the start or end of its reference * element.<br /> * It will read the variation of the `placement` property.<br /> * It can be one either `-end` or `-start`. * @memberof modifiers * @inner */ shift: { /** @prop {number} order=100 - Index used to define the order of execution */ order: 100, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: shift, }, /** * The `offset` modifier can shift your popper on both its axis. * * It accepts the following units: * - `px` or unitless, interpreted as pixels * - `%` or `%r`, percentage relative to the length of the reference element * - `%p`, percentage relative to the length of the popper element * - `vw`, CSS viewport width unit * - `vh`, CSS viewport height unit * * For length is intended the main axis relative to the placement of the popper.<br /> * This means that if the placement is `top` or `bottom`, the length will be the * `width`. In case of `left` or `right`, it will be the height. * * You can provide a single value (as `Number` or `String`), or a pair of values * as `String` divided by a comma or one (or more) white spaces.<br /> * The latter is a deprecated method because it leads to confusion and will be * removed in v2.<br /> * Additionally, it accepts additions and subtractions between different units. * Note that multiplications and divisions aren't supported. * * Valid examples are: * ``` * 10 * '10%' * '10, 10' * '10%, 10' * '10 + 10%' * '10 - 5vh + 3%' * '-10px + 5vh, 5px - 6%' * ``` * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap * > with their reference element, unfortunately, you will have to disable the `flip` modifier. * > More on this [reading this issue](https://github.com/FezVrasta/popper.js/issues/373) * * @memberof modifiers * @inner */ offset: { /** @prop {number} order=200 - Index used to define the order of execution */ order: 200, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: offset, /** @prop {Number|String} offset=0 * The offset value as described in the modifier description */ offset: 0, }, /** * Modifier used to prevent the popper from being positioned outside the boundary. * * An scenario exists where the reference itself is not within the boundaries.<br /> * We can say it has "escaped the boundaries" — or just "escaped".<br /> * In this case we need to decide whether the popper should either: * * - detach from the reference and remain "trapped" in the boundaries, or * - if it should ignore the boundary and "escape with its reference" * * When `escapeWithReference` is set to`true` and reference is completely * outside its boundaries, the popper will overflow (or completely leave) * the boundaries in order to remain attached to the edge of the reference. * * @memberof modifiers * @inner */ preventOverflow: { /** @prop {number} order=300 - Index used to define the order of execution */ order: 300, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: preventOverflow, /** * @prop {Array} [priority=['left','right','top','bottom']] * Popper will try to prevent overflow following these priorities by default, * then, it could overflow on the left and on top of the `boundariesElement` */ priority: ['left', 'right', 'top', 'bottom'], /** * @prop {number} padding=5 * Amount of pixel used to define a minimum distance between the boundaries * and the popper this makes sure the popper has always a little padding * between the edges of its container */ padding: 5, /** * @prop {String|HTMLElement} boundariesElement='scrollParent' * Boundaries used by the modifier, can be `scrollParent`, `window`, * `viewport` or any DOM element. */ boundariesElement: 'scrollParent', }, /** * Modifier used to make sure the reference and its popper stay near eachothers * without leaving any gap between the two. Expecially useful when the arrow is * enabled and you want to assure it to point to its reference element. * It cares only about the first axis, you can still have poppers with margin * between the popper and its reference element. * @memberof modifiers * @inner */ keepTogether: { /** @prop {number} order=400 - Index used to define the order of execution */ order: 400, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: keepTogether, }, /** * This modifier is used to move the `arrowElement` of the popper to make * sure it is positioned between the reference element and its popper element. * It will read the outer size of the `arrowElement` node to detect how many * pixels of conjuction are needed. * * It has no effect if no `arrowElement` is provided. * @memberof modifiers * @inner */ arrow: { /** @prop {number} order=500 - Index used to define the order of execution */ order: 500, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: arrow, /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */ element: '[x-arrow]', }, /** * Modifier used to flip the popper's placement when it starts to overlap its * reference element. * * Requires the `preventOverflow` modifier before it in order to work. * * **NOTE:** this modifier will interrupt the current update cycle and will * restart it if it detects the need to flip the placement. * @memberof modifiers * @inner */ flip: { /** @prop {number} order=600 - Index used to define the order of execution */ order: 600, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: flip, /** * @prop {String|Array} behavior='flip' * The behavior used to change the popper's placement. It can be one of * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid * placements (with optional variations). */ behavior: 'flip', /** * @prop {number} padding=5 * The popper will flip if it hits the edges of the `boundariesElement` */ padding: 5, /** * @prop {String|HTMLElement} boundariesElement='viewport' * The element which will define the boundaries of the popper position, * the popper will never be placed outside of the defined boundaries * (except if keepTogether is enabled) */ boundariesElement: 'viewport', }, /** * Modifier used to make the popper flow toward the inner of the reference element. * By default, when this modifier is disabled, the popper will be placed outside * the reference element. * @memberof modifiers * @inner */ inner: { /** @prop {number} order=700 - Index used to define the order of execution */ order: 700, /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */ enabled: false, /** @prop {ModifierFn} */ fn: inner, }, /** * Modifier used to hide the popper when its reference element is outside of the * popper boundaries. It will set a `x-out-of-boundaries` attribute which can * be used to hide with a CSS selector the popper when its reference is * out of boundaries. * * Requires the `preventOverflow` modifier before it in order to work. * @memberof modifiers * @inner */ hide: { /** @prop {number} order=800 - Index used to define the order of execution */ order: 800, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: hide, }, /** * Computes the style that will be applied to the popper element to gets * properly positioned. * * Note that this modifier will not touch the DOM, it just prepares the styles * so that `applyStyle` modifier can apply it. This separation is useful * in case you need to replace `applyStyle` with a custom implementation. * * This modifier has `850` as `order` value to maintain backward compatibility * with previous versions of Popper.js. Expect the modifiers ordering method * to change in future major versions of the library. * * @memberof modifiers * @inner */ computeStyle: { /** @prop {number} order=850 - Index used to define the order of execution */ order: 850, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: computeStyle, /** * @prop {Boolean} gpuAcceleration=true * If true, it uses the CSS 3d transformation to position the popper. * Otherwise, it will use the `top` and `left` properties. */ gpuAcceleration: true, /** * @prop {string} [x='bottom'] * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin. * Change this if your popper should grow in a direction different from `bottom` */ x: 'bottom', /** * @prop {string} [x='left'] * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin. * Change this if your popper should grow in a direction different from `right` */ y: 'right', }, /** * Applies the computed styles to the popper element. * * All the DOM manipulations are limited to this modifier. This is useful in case * you want to integrate Popper.js inside a framework or view library and you * want to delegate all the DOM manipulations to it. * * Note that if you disable this modifier, you must make sure the popper element * has its position set to `absolute` before Popper.js can do its work! * * Just disable this modifier and define you own to achieve the desired effect. * * @memberof modifiers * @inner */ applyStyle: { /** @prop {number} order=900 - Index used to define the order of execution */ order: 900, /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */ enabled: true, /** @prop {ModifierFn} */ fn: applyStyle, /** @prop {Function} */ onLoad: applyStyleOnLoad, /** * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier * @prop {Boolean} gpuAcceleration=true * If true, it uses the CSS 3d transformation to position the popper. * Otherwise, it will use the `top` and `left` properties. */ gpuAcceleration: undefined, }, }; /** * The `dataObject` is an object containing all the informations used by Popper.js * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks. * @name dataObject * @property {Object} data.instance The Popper.js instance * @property {String} data.placement Placement applied to popper * @property {String} data.originalPlacement Placement originally defined on init * @property {Boolean} data.flipped True if popper has been flipped by flip modifier * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper. * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`) * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow, it expects the JavaScript nomenclature (eg. `marginBottom`) * @property {Object} data.boundaries Offsets of the popper boundaries * @property {Object} data.offsets The measurements of popper, reference and arrow elements. * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0 */ ",
"import modifiers from '../modifiers/index'; /** * Default options provided to Popper.js constructor.<br /> * These can be overriden using the `options` argument of Popper.js.<br /> * To override an option, simply pass as 3rd argument an object with the same * structure of this object, example: * ``` * new Popper(ref, pop, { * modifiers: { * preventOverflow: { enabled: false } * } * }) * ``` * @type {Object} * @static * @memberof Popper */ export default { /** * Popper's placement * @prop {Popper.placements} placement='bottom' */ placement: 'bottom', /** * Whether events (resize, scroll) are initially enabled * @prop {Boolean} eventsEnabled=true */ eventsEnabled: true, /** * Set to true if you want to automatically remove the popper when * you call the `destroy` method. * @prop {Boolean} removeOnDestroy=false */ removeOnDestroy: false, /** * Callback called when the popper is created.<br /> * By default, is set to no-op.<br /> * Access Popper.js instance with `data.instance`. * @prop {onCreate} */ onCreate: () => {}, /** * Callback called when the popper is updated, this callback is not called * on the initialization/creation of the popper, but only on subsequent * updates.<br /> * By default, is set to no-op.<br /> * Access Popper.js instance with `data.instance`. * @prop {onUpdate} */ onUpdate: () => {}, /** * List of modifiers used to modify the offsets before they are applied to the popper. * They provide most of the functionalities of Popper.js * @prop {modifiers} */ modifiers, }; /** * @callback onCreate * @param {dataObject} data */ /** * @callback onUpdate * @param {dataObject} data */ ",
"// Utils import debounce from './utils/debounce'; import isFunction from './utils/isFunction'; // Methods import update from './methods/update'; import destroy from './methods/destroy'; import enableEventListeners from './methods/enableEventListeners'; import disableEventListeners from './methods/disableEventListeners'; import Defaults from './methods/defaults'; import placements from './methods/placements'; export default class Popper { /** * Create a new Popper.js instance * @class Popper * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper * @param {HTMLElement} popper - The HTML element used as popper. * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults) * @return {Object} instance - The generated Popper.js instance */ constructor(reference, popper, options = {}) { // make update() debounced, so that it only runs at most once-per-tick this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it this.options = { ...Popper.Defaults, ...options }; // init state this.state = { isDestroyed: false, isCreated: false, scrollParents: [], }; // get reference and popper elements (allow jQuery wrappers) this.reference = reference.jquery ? reference[0] : reference; this.popper = popper.jquery ? popper[0] : popper; // Deep merge modifiers options this.options.modifiers = {}; Object.keys({ ...Popper.Defaults.modifiers, ...options.modifiers, }).forEach(name => { this.options.modifiers[name] = { // If it's a built-in modifier, use it as base ...(Popper.Defaults.modifiers[name] || {}), // If there are custom options, override and merge with default ones ...(options.modifiers ? options.modifiers[name] : {}), }; }); // Refactoring modifiers' list (Object => Array) this.modifiers = Object.keys(this.options.modifiers) .map(name => ({ name, ...this.options.modifiers[name], })) // sort the modifiers by order .sort((a, b) => a.order - b.order); // modifiers have the ability to execute arbitrary code when Popper.js get inited // such code is executed in the same order of its modifier // they could add new properties to their options configuration // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`! this.modifiers.forEach(modifierOptions => { if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) { modifierOptions.onLoad( this.reference, this.popper, this.options, modifierOptions, this.state ); } }); // fire the first update to position the popper in the right place this.update(); const eventsEnabled = this.options.eventsEnabled; if (eventsEnabled) { // setup event listeners, they will take care of update the position in specific situations this.enableEventListeners(); } this.state.eventsEnabled = eventsEnabled; } // We can't use class properties because they don't get listed in the // class prototype and break stuff like Sinon stubs update() { return update.call(this); } destroy() { return destroy.call(this); } enableEventListeners() { return enableEventListeners.call(this); } disableEventListeners() { return disableEventListeners.call(this); } /** * Schedule an update, it will run on the next UI update available * @method scheduleUpdate * @memberof Popper */ scheduleUpdate = () => requestAnimationFrame(this.update); /** * Collection of utilities useful when writing custom modifiers. * Starting from version 1.7, this method is available only if you * include `popper-utils.js` before `popper.js`. * * **DEPRECATION**: This way to access PopperUtils is deprecated * and will be removed in v2! Use the PopperUtils module directly instead. * Due to the high instability of the methods contained in Utils, we can't * guarantee them to follow semver. Use them at your own risk! * @static * @private * @type {Object} * @deprecated since version 1.8 * @member Utils * @memberof Popper */ static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils; static placements = placements; static Defaults = Defaults; } /** * The `referenceObject` is an object that provides an interface compatible with Popper.js * and lets you use it as replacement of a real DOM node.<br /> * You can use this method to position a popper relatively to a set of coordinates * in case you don't have a DOM node to use as reference. * * ``` * new Popper(referenceObject, popperNode); * ``` * * NB: This feature isn't supported in Internet Explorer 10 * @name referenceObject * @property {Function} data.getBoundingClientRect * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method. * @property {number} data.clientWidth * An ES6 getter that will return the width of the virtual reference element. * @property {number} data.clientHeight * An ES6 getter that will return the height of the virtual reference element. */ "
],
names: [
"nativeHints",
"fn",
"some",
"hint",
"toString",
"indexOf",
"isBrowser",
"window",
"longerTimeoutBrowsers",
"timeoutDuration",
"i",
"length",
"navigator",
"userAgent",
"microtaskDebounce",
"scheduled",
"elem",
"document",
"createElement",
"observer",
"MutationObserver",
"observe",
"attributes",
"setAttribute",
"taskDebounce",
"supportsNativeMutationObserver",
"isNative",
"isFunction",
"functionToCheck",
"getType",
"call",
"getStyleComputedProperty",
"element",
"property",
"nodeType",
"css",
"getComputedStyle",
"getParentNode",
"nodeName",
"parentNode",
"host",
"getScrollParent",
"body",
"overflow",
"overflowX",
"overflowY",
"test",
"getOffsetParent",
"offsetParent",
"documentElement",
"isOffsetContainer",
"firstElementChild",
"getRoot",
"node",
"findCommonOffsetParent",
"element1",
"element2",
"order",
"compareDocumentPosition",
"Node",
"DOCUMENT_POSITION_FOLLOWING",
"start",
"end",
"range",
"createRange",
"setStart",
"setEnd",
"commonAncestorContainer",
"contains",
"element1root",
"getScroll",
"side",
"upperSide",
"html",
"scrollingElement",
"includeScroll",
"rect",
"subtract",
"scrollTop",
"scrollLeft",
"modifier",
"top",
"bottom",
"left",
"right",
"getBordersSize",
"styles",
"axis",
"sideA",
"sideB",
"split",
"isIE10",
"undefined",
"appVersion",
"getSize",
"computedStyle",
"Math",
"max",
"getWindowSizes",
"getClientRect",
"offsets",
"width",
"height",
"getBoundingClientRect",
"err",
"result",
"sizes",
"clientWidth",
"clientHeight",
"horizScrollbar",
"offsetWidth",
"vertScrollbar",
"offsetHeight",
"getOffsetRectRelativeToArbitraryNode",
"children",
"parent",
"runIsIE10",
"isHTML",
"childrenRect",
"parentRect",
"scrollParent",
"borderTopWidth",
"borderLeftWidth",
"marginTop",
"marginLeft",
"getViewportOffsetRectRelativeToArtbitraryNode",
"relativeOffset",
"innerWidth",
"innerHeight",
"offset",
"isFixed",
"getBoundaries",
"popper",
"reference",
"padding",
"boundariesElement",
"boundaries",
"boundariesNode",
"getArea",
"computeAutoPlacement",
"placement",
"refRect",
"rects",
"sortedAreas",
"Object",
"keys",
"map",
"key",
"sort",
"a",
"b",
"area",
"filteredAreas",
"filter",
"computedPlacement",
"variation",
"getReferenceOffsets",
"state",
"commonOffsetParent",
"getOuterSizes",
"x",
"parseFloat",
"marginBottom",
"y",
"marginRight",
"getOppositePlacement",
"hash",
"replace",
"matched",
"getPopperOffsets",
"referenceOffsets",
"popperRect",
"popperOffsets",
"isHoriz",
"mainSide",
"secondarySide",
"measurement",
"secondaryMeasurement",
"find",
"arr",
"check",
"Array",
"prototype",
"findIndex",
"prop",
"value",
"cur",
"match",
"obj",
"runModifiers",
"modifiers",
"data",
"ends",
"modifiersToRun",
"slice",
"forEach",
"function",
"warn",
"enabled",
"update",
"isDestroyed",
"options",
"flip",
"originalPlacement",
"position",
"isCreated",
"onCreate",
"onUpdate",
"isModifierEnabled",
"modifierName",
"name",
"getSupportedPropertyName",
"prefixes",
"upperProp",
"charAt",
"toUpperCase",
"prefix",
"toCheck",
"style",
"destroy",
"removeAttribute",
"disableEventListeners",
"removeOnDestroy",
"removeChild",
"attachToScrollParents",
"event",
"callback",
"scrollParents",
"isBody",
"target",
"addEventListener",
"passive",
"push",
"setupEventListeners",
"updateBound",
"scrollElement",
"eventsEnabled",
"enableEventListeners",
"scheduleUpdate",
"removeEventListeners",
"removeEventListener",
"cancelAnimationFrame",
"isNumeric",
"n",
"isNaN",
"isFinite",
"setStyles",
"unit",
"setAttributes",
"applyStyle",
"instance",
"arrowElement",
"arrowStyles",
"applyStyleOnLoad",
"modifierOptions",
"computeStyle",
"legacyGpuAccelerationOption",
"gpuAcceleration",
"offsetParentRect",
"floor",
"prefixedProperty",
"willChange",
"invertTop",
"invertLeft",
"arrow",
"isModifierRequired",
"requestingName",
"requestedName",
"requesting",
"isRequired",
"requested",
"querySelector",
"isVertical",
"len",
"sideCapitalized",
"toLowerCase",
"altSide",
"opSide",
"arrowElementSize",
"center",
"popperMarginSide",
"sideValue",
"min",
"round",
"getOppositeVariation",
"validPlacements",
"placements",
"clockwise",
"counter",
"index",
"concat",
"reverse",
"BEHAVIORS",
"flipped",
"placementOpposite",
"flipOrder",
"behavior",
"FLIP",
"CLOCKWISE",
"COUNTERCLOCKWISE",
"step",
"refOffsets",
"overlapsRef",
"overflowsLeft",
"overflowsRight",
"overflowsTop",
"overflowsBottom",
"overflowsBoundaries",
"flippedVariation",
"flipVariations",
"keepTogether",
"toValue",
"str",
"size",
"parseOffset",
"basePlacement",
"useHeight",
"fragments",
"frag",
"trim",
"divider",
"search",
"splitRegex",
"ops",
"op",
"mergeWithPrevious",
"reduce",
"index2",
"preventOverflow",
"priority",
"escapeWithReference",
"shift",
"shiftvariation",
"shiftOffsets",
"hide",
"bound",
"inner",
"subtractLength",
"Popper",
"requestAnimationFrame",
"debounce",
"bind",
"Defaults",
"jquery",
"onLoad",
"Utils",
"global",
"PopperUtils"
],
mappings: "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"
}